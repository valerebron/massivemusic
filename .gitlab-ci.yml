cache:
  paths:
  - node_modules/
stages:
  - build-vue-app
  - setup-bdd
  - deploy

build-vue-app:
  stage: build-vue-app
  artifacts:
    paths:
      - node_modules/
      - dist/
      - api/
      - config.js
      - server.js
      - docker-compose.yml
      - Dockerfile
  image: node:10.15-alpine
  before_script:
   - apk update && apk add yarn -y
   - rm config.json && mv configDist.json config.json
  script:
   - yarn && yarn build

setup-bdd:
  stage: setup-bdd
  tags: [shell]
  dependencies:
    - build-vue-app
  script:
    - sed -i "s/mongo_user/${MONGO_USER}/g" mongo-conf/mongo-createuser-entrypoint.sh
    - sed -i "s/mongo_pass/${MONGO_PASS}/g" mongo-conf/mongo-createuser-entrypoint.sh
    - sed -i "s/db_name/massivemusic/g" mongo-conf/mongo-createuser-entrypoint.sh
    - mkdir -p /data/db/mongo-conf
    - cp mongo-conf/mongo-createuser-entrypoint.sh /data/db/mongo-conf

deploy:
  stage: deploy
  tags: [shell]
  dependencies:
    - build-vue-app
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - mkdir -p /data/db/massivemusic2
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE
    - export MONGO_PASS=$MONGO_PASS MONGO_USER=$MONGO_USER
    - docker-compose up -d
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://massivemusic.fr
