<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Track extends \App\Entity\Track implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'idYt', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'artist', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'duration', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'playCount', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'invalid', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'style', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'member'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'idYt', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'artist', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'duration', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'playCount', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'invalid', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'style', '' . "\0" . 'App\\Entity\\Track' . "\0" . 'member'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Track $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdYt(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdYt', []);

        return parent::getIdYt();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdYt(string $idYt): \App\Entity\Track
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdYt', [$idYt]);

        return parent::setIdYt($idYt);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle(string $title): \App\Entity\Track
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getArtist(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtist', []);

        return parent::getArtist();
    }

    /**
     * {@inheritDoc}
     */
    public function setArtist(string $artist): \App\Entity\Track
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArtist', [$artist]);

        return parent::setArtist($artist);
    }

    /**
     * {@inheritDoc}
     */
    public function getDuration(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuration', []);

        return parent::getDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setDuration(int $duration): \App\Entity\Track
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuration', [$duration]);

        return parent::setDuration($duration);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlayCount(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlayCount', []);

        return parent::getPlayCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlayCount(int $playCount): \App\Entity\Track
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlayCount', [$playCount]);

        return parent::setPlayCount($playCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getInvalid(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvalid', []);

        return parent::getInvalid();
    }

    /**
     * {@inheritDoc}
     */
    public function setInvalid(bool $invalid): \App\Entity\Track
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInvalid', [$invalid]);

        return parent::setInvalid($invalid);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTimeInterface $createdAt): \App\Entity\Track
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getStyle(): ?\App\Entity\Style
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStyle', []);

        return parent::getStyle();
    }

    /**
     * {@inheritDoc}
     */
    public function setStyle(?\App\Entity\Style $style): \App\Entity\Track
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStyle', [$style]);

        return parent::setStyle($style);
    }

    /**
     * {@inheritDoc}
     */
    public function getMember(): ?\App\Entity\Member
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMember', []);

        return parent::getMember();
    }

    /**
     * {@inheritDoc}
     */
    public function setMember(?\App\Entity\Member $member): \App\Entity\Track
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMember', [$member]);

        return parent::setMember($member);
    }

}
